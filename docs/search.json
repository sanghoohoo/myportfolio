[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DS Website",
    "section": "",
    "text": "안녕하세요, 데이터 분석 안상후입니다.\n\n넘파이를 사용해서 벡터 만들기\n\n\nimport numpy as np\nnp.array([1, 2, 3, 4, 5])\n\narray([1, 2, 3, 4, 5])"
  },
  {
    "objectID": "index.html#홈페이지-첫-화면입니다",
    "href": "index.html#홈페이지-첫-화면입니다",
    "title": "DS Website",
    "section": "",
    "text": "안녕하세요, 데이터 분석 안상후입니다.\n\n넘파이를 사용해서 벡터 만들기\n\n\nimport numpy as np\nnp.array([1, 2, 3, 4, 5])\n\narray([1, 2, 3, 4, 5])"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "HW1.html",
    "href": "HW1.html",
    "title": "HW1",
    "section": "",
    "text": "다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요. (p.85)\n\nimport pandas as pd\ndf=pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nprint(df)\n\n   제품    가격  판매량\n0  사과  1800   24\n1  딸기  1500   38\n2  수박  3000   13\n\n\nmpg데이터 변수명 변경 (p.115)\n\nmpg=pd.read_csv('data/mpg.csv')\nmpg_new=mpg.copy()\nmpg_new=mpg_new.rename(columns={'cty':'city'})\nmpg_new=mpg_new.rename(columns={'hwy':'highway'})\nprint(mpg_new)\n\n    manufacturer   model  displ  year  cyl       trans drv  city  highway fl  \\\n0           audi      a4    1.8  1999    4    auto(l5)   f    18       29  p   \n1           audi      a4    1.8  1999    4  manual(m5)   f    21       29  p   \n2           audi      a4    2.0  2008    4  manual(m6)   f    20       31  p   \n3           audi      a4    2.0  2008    4    auto(av)   f    21       30  p   \n4           audi      a4    2.8  1999    6    auto(l5)   f    16       26  p   \n..           ...     ...    ...   ...  ...         ...  ..   ...      ... ..   \n229   volkswagen  passat    2.0  2008    4    auto(s6)   f    19       28  p   \n230   volkswagen  passat    2.0  2008    4  manual(m6)   f    21       29  p   \n231   volkswagen  passat    2.8  1999    6    auto(l5)   f    16       26  p   \n232   volkswagen  passat    2.8  1999    6  manual(m5)   f    18       26  p   \n233   volkswagen  passat    3.6  2008    6    auto(s6)   f    17       26  p   \n\n    category  \n0    compact  \n1    compact  \n2    compact  \n3    compact  \n4    compact  \n..       ...  \n229  midsize  \n230  midsize  \n231  midsize  \n232  midsize  \n233  midsize  \n\n[234 rows x 11 columns]\n\n\nmidway.csv를 불러와 데이터의 특징을 파악하세요. (p.130)\n\nmdw=pd.read_csv('data/midwest.csv')\nmdw.describe()\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\npoptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\nmdw=mdw.rename(columns={'poptotal':'total'})\nmdw=mdw.rename(columns={'popasian':'asian'})\nprint(mdw[['total','asian']])\n\n      total  asian\n0     66090    249\n1     10626     48\n2     14991     16\n3     30806    150\n4      5836      5\n..      ...    ...\n432  304715   2699\n433   46104     92\n434   19385     43\n435  140320   1728\n436   73605    722\n\n[437 rows x 2 columns]\n\n\ntotal,asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nimport matplotlib.pyplot as plt\nmdw['per_asian']=mdw['asian']/mdw['total']*100\nprint(mdw)\nmdw['per_asian'].hist()\nplt.show()\n\n      PID     county state   area   total   popdensity  popwhite  popblack  \\\n0     561      ADAMS    IL  0.052   66090  1270.961540     63917      1702   \n1     562  ALEXANDER    IL  0.014   10626   759.000000      7054      3496   \n2     563       BOND    IL  0.022   14991   681.409091     14477       429   \n3     564      BOONE    IL  0.017   30806  1812.117650     29344       127   \n4     565      BROWN    IL  0.018    5836   324.222222      5264       547   \n..    ...        ...   ...    ...     ...          ...       ...       ...   \n432  3048   WAUKESHA    WI  0.034  304715  8962.205880    298313      1096   \n433  3049    WAUPACA    WI  0.045   46104  1024.533330     45695        22   \n434  3050   WAUSHARA    WI  0.037   19385   523.918919     19094        29   \n435  3051  WINNEBAGO    WI  0.035  140320  4009.142860    136822       697   \n436  3052       WOOD    WI  0.048   73605  1533.437500     72157        90   \n\n     popamerindian  asian  ...  percprof  poppovertyknown  percpovertyknown  \\\n0               98    249  ...  4.355859            63628         96.274777   \n1               19     48  ...  2.870315            10529         99.087145   \n2               35     16  ...  4.488572            14235         94.956974   \n3               46    150  ...  4.197800            30337         98.477569   \n4               14      5  ...  3.367680             4815         82.505140   \n..             ...    ...  ...       ...              ...               ...   \n432            672   2699  ...  7.667090           299802         98.387674   \n433            125     92  ...  3.138596            44412         96.330036   \n434             70     43  ...  2.620907            19163         98.854785   \n435            685   1728  ...  5.659847           133950         95.460376   \n436            481    722  ...  4.583725            72685         98.750085   \n\n     percbelowpoverty  percchildbelowpovert  percadultpoverty  \\\n0           13.151443             18.011717         11.009776   \n1           32.244278             45.826514         27.385647   \n2           12.068844             14.036061         10.852090   \n3            7.209019             11.179536          5.536013   \n4           13.520249             13.022889         11.143211   \n..                ...                   ...               ...   \n432          3.121060              3.785820          2.590061   \n433          8.488697             10.071411          6.953799   \n434         13.786985             20.050708         11.695784   \n435          8.804031             10.592031          8.660587   \n436          8.525831             11.162997          7.375656   \n\n     percelderlypoverty  inmetro  category  per_asian  \n0             12.443812        0       AAR   0.376759  \n1             25.228976        0       LHR   0.451722  \n2             12.697410        0       AAR   0.106731  \n3              6.217047        1       ALU   0.486918  \n4             19.200000        0       AAR   0.085675  \n..                  ...      ...       ...        ...  \n432            4.085479        1       HLU   0.885746  \n433           10.338641        0       AAR   0.199549  \n434           11.804558        0       AAR   0.221821  \n435            6.661094        1       HAU   1.231471  \n436            7.882918        0       AAR   0.980912  \n\n[437 rows x 29 columns]\n\n\n\n\n\n\n\n\n\n아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘Large’, 그 외에는 ’Small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\navg_asian=mdw['per_asian'].mean()\nmdw['amo_asian']=np.where((mdw['per_asian']&gt;avg_asian),'Large','Small')\nprint(mdw)\n\n      PID     county state   area   total   popdensity  popwhite  popblack  \\\n0     561      ADAMS    IL  0.052   66090  1270.961540     63917      1702   \n1     562  ALEXANDER    IL  0.014   10626   759.000000      7054      3496   \n2     563       BOND    IL  0.022   14991   681.409091     14477       429   \n3     564      BOONE    IL  0.017   30806  1812.117650     29344       127   \n4     565      BROWN    IL  0.018    5836   324.222222      5264       547   \n..    ...        ...   ...    ...     ...          ...       ...       ...   \n432  3048   WAUKESHA    WI  0.034  304715  8962.205880    298313      1096   \n433  3049    WAUPACA    WI  0.045   46104  1024.533330     45695        22   \n434  3050   WAUSHARA    WI  0.037   19385   523.918919     19094        29   \n435  3051  WINNEBAGO    WI  0.035  140320  4009.142860    136822       697   \n436  3052       WOOD    WI  0.048   73605  1533.437500     72157        90   \n\n     popamerindian  asian  ...  poppovertyknown  percpovertyknown  \\\n0               98    249  ...            63628         96.274777   \n1               19     48  ...            10529         99.087145   \n2               35     16  ...            14235         94.956974   \n3               46    150  ...            30337         98.477569   \n4               14      5  ...             4815         82.505140   \n..             ...    ...  ...              ...               ...   \n432            672   2699  ...           299802         98.387674   \n433            125     92  ...            44412         96.330036   \n434             70     43  ...            19163         98.854785   \n435            685   1728  ...           133950         95.460376   \n436            481    722  ...            72685         98.750085   \n\n     percbelowpoverty  percchildbelowpovert  percadultpoverty  \\\n0           13.151443             18.011717         11.009776   \n1           32.244278             45.826514         27.385647   \n2           12.068844             14.036061         10.852090   \n3            7.209019             11.179536          5.536013   \n4           13.520249             13.022889         11.143211   \n..                ...                   ...               ...   \n432          3.121060              3.785820          2.590061   \n433          8.488697             10.071411          6.953799   \n434         13.786985             20.050708         11.695784   \n435          8.804031             10.592031          8.660587   \n436          8.525831             11.162997          7.375656   \n\n     percelderlypoverty  inmetro  category  per_asian  amo_asian  \n0             12.443812        0       AAR   0.376759      Small  \n1             25.228976        0       LHR   0.451722      Small  \n2             12.697410        0       AAR   0.106731      Small  \n3              6.217047        1       ALU   0.486918      Small  \n4             19.200000        0       AAR   0.085675      Small  \n..                  ...      ...       ...        ...        ...  \n432            4.085479        1       HLU   0.885746      Large  \n433           10.338641        0       AAR   0.199549      Small  \n434           11.804558        0       AAR   0.221821      Small  \n435            6.661094        1       HAU   1.231471      Large  \n436            7.882918        0       AAR   0.980912      Large  \n\n[437 rows x 30 columns]\n\n\n’Large’와 ’Small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nplt.clf()\nasian_counts=mdw['amo_asian'].value_counts()\nprint(asian_counts)\nasian_counts.plot.bar(rot=0)\nplt.show()\n\namo_asian\nSmall    318\nLarge    119\nName: count, dtype: int64"
  }
]