{
  "hash": "628489b1168fa862f898dfd94b18f02b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Kaggle: Houseprice - Tensorflow\"\nauthor: 'Sanghoo Ahn'\ndate: '2024-09-27'\ncategories: [Machine Learning]\njupyter: python3\n---\n\n## Kaggle 링크\n[House Prices - Advanced Regression Techniques](https://www.kaggle.com/competitions/house-prices-advanced-regression-techniques)\n\n## 전처리\n\n::: {#c196b7f3 .cell execution_count=1}\n``` {.python .cell-code}\n# 필요한 패키지 불러오기\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.optimizers import Adam\n\nnp.random.seed(20240911) \n\n## 필요한 데이터 불러오기\nhouse_train=pd.read_csv(\"./train.csv\")\nhouse_test=pd.read_csv(\"./test.csv\")\nsub_df=pd.read_csv(\"./sample_submission.csv\")\n\n## NaN 채우기\n# 각 숫치형 변수는 평균 채우기\n# 각 범주형 변수는 Unknown 채우기\nhouse_train.isna().sum()\nhouse_test.isna().sum()\n\n## 숫자형 채우기\nquantitative = house_train.select_dtypes(include = [int, float])\nquantitative.isna().sum()\nquant_selected = quantitative.columns[quantitative.isna().sum() > 0]\n\nfor col in quant_selected:\n    house_train[col] = house_train[col].fillna(house_train[col].mean())\nhouse_train[quant_selected].isna().sum()\n\n## 범주형 채우기\nqualitative = house_train.select_dtypes(include = [object])\nqualitative.isna().sum()\nqual_selected = qualitative.columns[qualitative.isna().sum() > 0]\n\nfor col in qual_selected:\n    house_train[col] = house_train[col].fillna(\"unknown\")\n\n\n# test 데이터 채우기\n## 숫자형 채우기\nquantitative = house_test.select_dtypes(include = [int, float])\nquantitative.isna().sum()\nquant_selected = quantitative.columns[quantitative.isna().sum() > 0]\n\nfor col in quant_selected:\n    house_test[col] = house_test[col].fillna(house_train[col].mean())\nhouse_test[quant_selected].isna().sum()\n\n## 범주형 채우기\nqualitative = house_test.select_dtypes(include = [object])\nqualitative.isna().sum()\nqual_selected = qualitative.columns[qualitative.isna().sum() > 0]\n\nfor col in qual_selected:\n    house_test[col] = house_test[col].fillna(\"unknown\")\nhouse_test[qual_selected].isna().sum()\n\n\nhouse_train.shape\nhouse_test.shape\ntrain_n=len(house_train)\n\n# 통합 df 만들기 + 더미코딩\n# house_test.select_dtypes(include=[int, float])\n\ndf = pd.concat([house_train, house_test], ignore_index=True)\n# df.info()\ndf = pd.get_dummies(\n    df,\n    columns= df.select_dtypes(include=[object]).columns,\n    drop_first=True\n    )\ndf\n\n# train / test 데이터셋\ntrain_df=df.iloc[:train_n,]\ntest_df=df.iloc[train_n:,]\n\n## 이상치 탐색\ntrain_df=train_df.query(\"GrLivArea <= 4500\")\n\n## train\ntrain_x=train_df.drop(\"SalePrice\", axis=1)\ntrain_y=train_df[\"SalePrice\"]\n\n## test\ntest_x=test_df.drop(\"SalePrice\", axis=1)\n```\n:::\n\n\n## 모델 생성\n\n::: {#51e57925 .cell execution_count=2}\n``` {.python .cell-code}\n# 신경망 모델 정의\nmodel = Sequential()\nmodel.add(Dense(128, input_dim=train_x.shape[1], activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(32, activation='relu'))\nmodel.add(Dense(1))\n\n# 모델 컴파일\nmodel.compile(optimizer=Adam(learning_rate=0.001), loss='mean_squared_error')\n\n# 모델 학습\nhistory = model.fit(train_x, train_y, epochs=200, batch_size=32, validation_split=0.1, verbose=1)\n```\n:::\n\n\n## 학습 과정 시각화\n\n::: {#6c316765 .cell execution_count=3}\n``` {.python .cell-code}\nplt.plot(history.history['loss'], label='train loss')\nplt.plot(history.history['val_loss'], label='validation loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=589 height=443}\n:::\n:::\n\n\n## 예측\n\n::: {#27afb3e0 .cell execution_count=4}\n``` {.python .cell-code}\n# 예측\npred_y = model.predict(test_x).flatten()\n```\n:::\n\n\n::: {#904e996e .cell execution_count=5}\n``` {.python .cell-code}\n# SalePrice 바꿔치기\nsub_df[\"SalePrice\"] = pred_y\nsub_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SalePrice</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1461</td>\n      <td>146493.953125</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1462</td>\n      <td>178756.421875</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1463</td>\n      <td>187970.453125</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1464</td>\n      <td>190732.937500</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1465</td>\n      <td>168399.859375</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## 모델 성능\n\n::: {#b8ea4e75 .cell execution_count=6}\n``` {.python .cell-code}\n# 모델 성능 평가\nfrom sklearn.metrics import mean_squared_error\ntrain_y_pred = model.predict(train_x)\nmse = mean_squared_error(train_y, train_y_pred)\n```\n:::\n\n\n::: {#b2bc2b3a .cell execution_count=7}\n``` {.python .cell-code}\nprint(f\"Mean Squared Error on training set: {mse:.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMean Squared Error on training set: 852977100.51\n```\n:::\n:::\n\n\n<div id=\"disqus_thread\"></div>\n<script>\nvar disqus_config = function () {\n    this.page.url = window.location.href;  // 현재 페이지 URL\n    this.page.identifier = window.location.pathname; // 페이지 고유 식별자\n};\n\n(function() { // DON'T EDIT BELOW THIS LINE\n    var d = document, s = d.createElement('script');\n    s.src = 'https://sanghoohoo.disqus.com/embed.js';\n    s.setAttribute('data-timestamp', +new Date());\n    (d.head || d.body).appendChild(s);\n})();\n</script>\n<noscript>Please enable JavaScript to view the <a href=\"https://disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}