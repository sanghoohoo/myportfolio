{
  "hash": "56bc42758c0162e539dbbea8516df266",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"HW5\"\nauthor: 'Sanghoo Ahn'\ndate: '2024-07-22'\ncategories: [bigdata]\njupyter: python3\n---\n\n**성별에 따른 월급 설문조사 그래프에서 각 성별 95% 신뢰구간 계산 후 그리기 norm.ppf() 사용해서 그릴 것. 모분산은 표본분산을 사용해서 규정.**\n\n# 기존 그래프\n\n::: {#76265c67 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nraw_welfare = pd.read_spss('C:/Users/USER/Documents/LS빅데이터스쿨/myportfolio/data/Koweps_hpwc14_2019_beta2.sav')\nwelfare=raw_welfare.copy()\n\nwelfare = welfare.rename(\n    columns = {'h14_g3' : 'sex',\n               'h14_g4' : 'birth',\n               'h14_g10' : 'marriage_type',\n               'h14_g11' : 'religion',\n               'p1402_8aq1' : 'income',\n               'h14_eco9' : 'code_job',\n               'h14_reg7' : 'code_religion',}\n)\n\nwelfare = welfare[['sex','birth', 'marriage_type', 'religion',\n                   'income', 'code_job', 'code_religion']]\n                   \nwelfare['sex']=np.where(welfare['sex']==1, 'male', 'female')\n\nsex_income = welfare.dropna(subset = 'income')\\\n                    .groupby('sex', as_index = False)\\\n                    .agg(mean_income = ('income', 'mean'))\n                    \nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = 'sex')\n\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=593 height=429}\n:::\n:::\n\n\n# 표본평균과 표본분산 구하기\n\n::: {#1369d534 .cell execution_count=2}\n``` {.python .cell-code}\nmean_male = sex_income.iloc[1,1]\nmean_female = sex_income.iloc[0,1]\nprint('mean male: ', mean_male)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmean male:  349.03757099169945\n```\n:::\n:::\n\n\n::: {#c614e17c .cell execution_count=3}\n``` {.python .cell-code}\nprint('mean female: ', mean_female)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmean female:  186.29309576837417\n```\n:::\n:::\n\n\n::: {#a42c0fc7 .cell execution_count=4}\n``` {.python .cell-code}\nstd_income = welfare.dropna(subset = 'income')\\\n                    .groupby('sex', as_index = False)\\\n                    .agg(std_income = ('income', 'std'))\nstd_male = std_income.iloc[1,1]\nstd_female = std_income.iloc[0,1]\n\nprint('std. male: ', std_male)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nstd. male:  217.86225435930135\n```\n:::\n:::\n\n\n::: {#583e7ad2 .cell execution_count=5}\n``` {.python .cell-code}\nprint('std. female:', std_female)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nstd. female: 132.05740180730666\n```\n:::\n:::\n\n\n# 신뢰구간 구하기\n\n::: {#e7969154 .cell execution_count=6}\n``` {.python .cell-code}\nfrom scipy.stats import norm\nz_0025 = norm.ppf(0.975, loc=0, scale=1)\nn_male = welfare.dropna(subset = 'income').query(\"sex=='male'\")['income'].count()\nn_female = welfare.dropna(subset = 'income').query(\"sex=='female'\")['income'].count()\nci_male1 = mean_male + z_0025 * std_male/np.sqrt(n_male)\nci_male2 = mean_male - z_0025 * std_male/np.sqrt(n_male)\nci_female1 = mean_female + z_0025 * std_female/np.sqrt(n_female)\nci_female2 = mean_female - z_0025 * std_female/np.sqrt(n_female)\nci_male1\nci_male2\n\nprint('c.i.male upper: ', ci_male1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nc.i.male upper:  357.96254968365116\n```\n:::\n:::\n\n\n::: {#e9d8eb8a .cell execution_count=7}\n``` {.python .cell-code}\nprint('c.i.male lower: ', ci_male2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nc.i.male lower:  340.11259229974775\n```\n:::\n:::\n\n\n::: {#8abe1484 .cell execution_count=8}\n``` {.python .cell-code}\nprint('c.i.female upper: ', ci_female1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nc.i.female upper:  191.7557368532799\n```\n:::\n:::\n\n\n::: {#baac5b7a .cell execution_count=9}\n``` {.python .cell-code}\nprint('c.i.female lower: ', ci_female1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nc.i.female lower:  191.7557368532799\n```\n:::\n:::\n\n\n# 그래프 그리기\n\n::: {#15c6ca26 .cell execution_count=10}\n``` {.python .cell-code}\nsns.barplot(data = sex_income, x = 'sex', y = 'mean_income', hue = 'sex')\nplt.plot([0,0], [ci_female1 , ci_female2], color='r')\nplt.plot([1,1], [ci_male1 , ci_male2], color='r')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-11-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}